struct dsu{
    vl p, l;
    stack<ll> st;
    dsu(ll n = 0){
        p.resize(n + 10);
        l.resize(n + 10);
        fu(i, 1, n) p[i] = i, l[i] = 1;
    }
    ll find_set(ll u){
        return (u == p[u] ? u : find_set(p[u]));
    }
    bool join_set(ll u, ll v){
        u = find_set(u), v = find_set(v);
        if(u == v) return false;
        if(l[u] < l[v]) swap(u, v);
        p[v] = u, l[u] += l[v];
        st.push(v);
        return true;
    }
    void roll_back(){
        ll u = st.top(); st.pop();
        l[p[u]] -= l[u];
        p[u] = u;
    }
} dsus;
